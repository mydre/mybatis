<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--使用命名空间来实现mapper的xml文件和对应的接口文件的关联-->
<mapper namespace="com.imooc.mybatis.dao.PersonMapper">
    <resultMap id="resultMap" type="person">
        <id property="id" column="id" javaType="Integer"/>
        <result property="username" column="username" javaType="String"/>
        <result property="email" column="email" javaType="String"/>
        <result property="gender" column="gender" javaType="String"/>
        <result property="deptId" column="dept_id" javaType="Integer"/>
    </resultMap>
    <delete id="deletePerson" parameterType="Integer">
        delete from person where id = #{i}
    </delete>

    <select id="selectByNameAndGender" resultMap="resultMap" >
        select * from person where username = #{param1} and gender = #{param2}
    </select>

    <select id="selectByNameAndGender2" resultMap="resultMap" >
        select * from person where username = #{name} and gender = #{sex}
    </select>

    <select id="selectByNameAndGender3" resultMap="resultMap" >
        select * from person where username = #{p1} and gender = #{p2}
    </select>

    <select id="selectByCollection" resultMap="resultMap" >
        select * from person where id = #{list[1]}
    </select>

    <select id="selectByArray" resultMap="resultMap" >
        select * from person where id = #{array[2]}
    </select>

    <!--array充当数组方式时的key，idv表示每一项的值，index在list中充当索引，在map中充当key,通过,将每个#{div}分隔开
    构造出 select * from person where id in (#{id1},#{id2},#{id3})的形式，从而形成sql语句-->
    <select id="selectByIds" resultMap="resultMap" >
        select * from person where id in
        <foreach collection="array" item="idv" open="(" close=")" index="i" separator=",">
            #{idv}
        </foreach>
    </select>

    <!--因为参数是List或Collection类型的，所以collocton="这里使用list或者collection都可以"-->
    <insert id="insertPersons">
        insert into person(username,email) values
        <foreach collection="collection" separator="," index="i" item="person">
            (#{person.username},#{person.email})
        </foreach>
    </insert>

    <!--Mybatis 根据allowMultiQueries进行批量插入数据-->
    <insert id="insertPersons2">
        <foreach collection="list" item="person" separator=";">
            insert into person(username,email) values (#{person.username},#{person.email})
        </foreach>
    </insert>

    <!--使用executor进行批量数据插入-->
    <insert id="insertByExecutorBatch" parameterType="Person">
        insert into person(username,email) values(#{username},#{email})
    </insert>

</mapper>